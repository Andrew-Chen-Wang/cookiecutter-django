; Quoted from: https://www.uvd.co.uk/blog/using-aws-certificate-manager-nginx
; As we added SSL to the load balancer, not our instance, we don’t have to deal with configuring keys or listening on a new port. As far as the web server is concerned we’re still running under HTTP which comes with it’s own problems. Luckily AWS are one step ahead and have a header we can use for this purpose as shown in the example below.

server {

    set $my_host $host;
    if ($host ~ "\d+\.\d+\.\d+\.\d+") {
        set $my_host "{{ cookiecutter.domain_name }}";
    }

    listen 80;
    server_name {{ cookiecutter.domain_name }};
    charset utf-8;
    error_log /dev/stdout info;
    access_log /dev/stdout;

    location / {
        proxy_pass http://django:5000;
        proxy_set_header Host $my_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }

    if ($http_x_forwarded_proto != 'https') {
      return 301 https://$my_host$request_uri;
    }
}
